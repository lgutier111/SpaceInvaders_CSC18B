package SpaceInvaders_V4.Users;

import SpaceInvaders_V4.Main.ResourceFactory;
import SpaceInvaders_V4.Util.DBConnect;
import static SpaceInvaders_V4.Util.Validator.*;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.HashMap;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;

public class UserControlPanel extends javax.swing.JFrame{

    private CardLayout cl;
    //color vars
    Color valid = new Color(200, 255, 200);
    Color invalid = new Color(255, 200, 200);

    public UserControlPanel() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        initComponents();
        setLocationRelativeTo(null);

        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent e) {
                close();
            }

        });

        cl = (CardLayout) MainPanel.getLayout();
        if (User.isLoggedIn()) {
            NavRegLog.setText("Log Out");
            cl.show(MainPanel, "HomePanel");
        } else {
            NavRegLog.setText("Register");
            cl.show(MainPanel, "LoginPanel");
        }
    }

    //go back to game window
    private void close() {
        setVisible(false);
        ResourceFactory.get().getGameWindow().setVisable(true);
        ResourceFactory.get().getGameWindow().requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        MainPanel = new javax.swing.JPanel();
        LoginPanel = new javax.swing.JPanel();
        LoginEmailField = new javax.swing.JTextField();
        LoginEmailLabel = new javax.swing.JLabel();
        LoginPassLabel = new javax.swing.JLabel();
        LoginCancel = new javax.swing.JButton();
        LoginConfirm = new javax.swing.JButton();
        LoginPassField = new javax.swing.JPasswordField();
        LoginTitlelabel = new javax.swing.JLabel();
        LoginEmailValid = new javax.swing.JLabel();
        LoginPassValid = new javax.swing.JLabel();
        LoginBGLabel = new javax.swing.JLabel();
        HomePanel = new javax.swing.JPanel();
        HomeWelcomeLabel = new javax.swing.JLabel();
        HomeStatsLabels = new javax.swing.JLabel();
        HomeExitButton = new javax.swing.JButton();
        HomeStatsValues = new javax.swing.JLabel();
        HomeBGLabel = new javax.swing.JLabel();
        RegPanel = new javax.swing.JPanel();
        RegTitleLabel = new javax.swing.JLabel();
        RegFnameLabel = new javax.swing.JLabel();
        RegFNameField = new javax.swing.JTextField();
        RegLNameLabel = new javax.swing.JLabel();
        RegLNameField = new javax.swing.JTextField();
        RegUserLabel = new javax.swing.JLabel();
        RegUserField = new javax.swing.JTextField();
        RegEmailLabel = new javax.swing.JLabel();
        RegEmailField = new javax.swing.JTextField();
        RegPassLabel = new javax.swing.JLabel();
        RegPassField = new javax.swing.JPasswordField();
        RegPassLabel2 = new javax.swing.JLabel();
        RegPassField2 = new javax.swing.JPasswordField();
        RegCancel = new javax.swing.JButton();
        RegConfirm = new javax.swing.JButton();
        RegFNameValid = new javax.swing.JLabel();
        RegLNameValid = new javax.swing.JLabel();
        RegUserValid = new javax.swing.JLabel();
        RegEmailValid = new javax.swing.JLabel();
        RegPassValid = new javax.swing.JLabel();
        RegPassMatch = new javax.swing.JLabel();
        RegTitlelabel = new javax.swing.JLabel();
        RegBGLabel = new javax.swing.JLabel();
        NavPanel = new javax.swing.JPanel();
        NavHome = new javax.swing.JButton();
        NavRegLog = new javax.swing.JButton();
        NavHiScores = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName("UserControlPanel"); // NOI18N
        setResizable(false);

        MainPanel.setMaximumSize(new java.awt.Dimension(800, 575));
        MainPanel.setMinimumSize(new java.awt.Dimension(800, 575));
        MainPanel.setPreferredSize(new java.awt.Dimension(800, 575));
        MainPanel.setLayout(new java.awt.CardLayout());

        LoginPanel.setMaximumSize(new java.awt.Dimension(800, 575));
        LoginPanel.setMinimumSize(new java.awt.Dimension(800, 575));
        LoginPanel.setPreferredSize(new java.awt.Dimension(800, 575));
        LoginPanel.setLayout(null);
        LoginPanel.add(LoginEmailField);
        LoginEmailField.setBounds(317, 351, 271, 29);

        LoginEmailLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        LoginEmailLabel.setForeground(new java.awt.Color(255, 255, 0));
        LoginEmailLabel.setText("Email");
        LoginPanel.add(LoginEmailLabel);
        LoginEmailLabel.setBounds(219, 357, 86, 24);

        LoginPassLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        LoginPassLabel.setForeground(new java.awt.Color(255, 255, 0));
        LoginPassLabel.setText("Password");
        LoginPanel.add(LoginPassLabel);
        LoginPassLabel.setBounds(219, 412, 86, 31);

        LoginCancel.setText("Cancel");
        LoginCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginCancelActionPerformed(evt);
            }
        });
        LoginPanel.add(LoginCancel);
        LoginCancel.setBounds(219, 474, 148, 54);

        LoginConfirm.setText("Login");
        LoginConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginConfirmActionPerformed(evt);
            }
        });
        LoginPanel.add(LoginConfirm);
        LoginConfirm.setBounds(379, 474, 209, 54);
        LoginPanel.add(LoginPassField);
        LoginPassField.setBounds(317, 412, 271, 31);

        LoginTitlelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LoginTitlelabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/title/title.png"))); // NOI18N
        LoginPanel.add(LoginTitlelabel);
        LoginTitlelabel.setBounds(12, 58, 776, 220);

        LoginEmailValid.setForeground(new java.awt.Color(255, 0, 0));
        LoginPanel.add(LoginEmailValid);
        LoginEmailValid.setBounds(600, 351, 188, 29);

        LoginPassValid.setForeground(new java.awt.Color(255, 0, 0));
        LoginPanel.add(LoginPassValid);
        LoginPassValid.setBounds(600, 412, 188, 31);

        LoginBGLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/backgrounds/Space.gif"))); // NOI18N
        LoginPanel.add(LoginBGLabel);
        LoginBGLabel.setBounds(0, 0, 800, 570);

        MainPanel.add(LoginPanel, "LoginPanel");

        HomePanel.setMaximumSize(new java.awt.Dimension(800, 575));
        HomePanel.setMinimumSize(new java.awt.Dimension(800, 575));
        HomePanel.setLayout(null);

        HomeWelcomeLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        HomeWelcomeLabel.setForeground(new java.awt.Color(255, 255, 0));
        HomeWelcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HomeWelcomeLabel.setText("Welcome User");
        HomePanel.add(HomeWelcomeLabel);
        HomeWelcomeLabel.setBounds(210, 30, 369, 37);

        HomeStatsLabels.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        HomeStatsLabels.setForeground(new java.awt.Color(255, 255, 0));
        HomeStatsLabels.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        HomeStatsLabels.setText("<html>Player Stats<br/>Games Played: <br/>Total Score: <br/>Total Kills: <br/>Total PowerUps: <br/>Total Deaths: <br/>Best Score: <br/>Most Kills: <br/>Most PowerUps:<br/>Least Deaths: <br/>Average Score: <br/> Average Kills: <br/> Average PowerUps: <br/> Average Deaths: </html>");
        HomePanel.add(HomeStatsLabels);
        HomeStatsLabels.setBounds(240, 70, 180, 360);

        HomeExitButton.setText("Return To Game Menu");
        HomeExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeExitButtonActionPerformed(evt);
            }
        });
        HomePanel.add(HomeExitButton);
        HomeExitButton.setBounds(290, 450, 230, 70);

        HomeStatsValues.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        HomeStatsValues.setForeground(new java.awt.Color(255, 255, 0));
        HomeStatsValues.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        HomeStatsValues.setText("<html>Games Played: <br/>Total Score: <br/>Total Kills: <br/>Total PowerUps: <br/>Total Deaths: <br/>Best Score: <br/>Most Kills: <br/>Most PowerUps:<br/>Least Deaths: <br/>Average Score: <br/> Average Kills: <br/> Average PowerUps: <br/> Average Deaths: </html>");
        HomePanel.add(HomeStatsValues);
        HomeStatsValues.setBounds(430, 80, 190, 360);

        HomeBGLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/backgrounds/Space.gif"))); // NOI18N
        HomePanel.add(HomeBGLabel);
        HomeBGLabel.setBounds(0, 0, 800, 570);

        MainPanel.add(HomePanel, "HomePanel");

        RegPanel.setMaximumSize(new java.awt.Dimension(800, 575));
        RegPanel.setMinimumSize(new java.awt.Dimension(800, 575));
        RegPanel.setLayout(null);

        RegTitleLabel.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        RegTitleLabel.setForeground(new java.awt.Color(255, 255, 0));
        RegTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RegTitleLabel.setText("Registration");
        RegPanel.add(RegTitleLabel);
        RegTitleLabel.setBounds(210, 180, 369, 34);

        RegFnameLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegFnameLabel.setForeground(new java.awt.Color(255, 255, 0));
        RegFnameLabel.setText("First Name");
        RegPanel.add(RegFnameLabel);
        RegFnameLabel.setBounds(120, 220, 110, 24);

        RegFNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegFNameFieldFocusLost(evt);
            }
        });
        RegPanel.add(RegFNameField);
        RegFNameField.setBounds(250, 220, 271, 29);

        RegLNameLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegLNameLabel.setForeground(new java.awt.Color(255, 255, 0));
        RegLNameLabel.setText("Last Name");
        RegPanel.add(RegLNameLabel);
        RegLNameLabel.setBounds(120, 260, 100, 24);

        RegLNameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegLNameFieldFocusLost(evt);
            }
        });
        RegLNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegLNameFieldActionPerformed(evt);
            }
        });
        RegPanel.add(RegLNameField);
        RegLNameField.setBounds(250, 260, 271, 29);

        RegUserLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegUserLabel.setForeground(new java.awt.Color(255, 255, 0));
        RegUserLabel.setText("User Name");
        RegPanel.add(RegUserLabel);
        RegUserLabel.setBounds(120, 300, 120, 24);

        RegUserField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegUserFieldFocusLost(evt);
            }
        });
        RegPanel.add(RegUserField);
        RegUserField.setBounds(250, 300, 271, 29);

        RegEmailLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegEmailLabel.setForeground(new java.awt.Color(255, 255, 0));
        RegEmailLabel.setText("Email");
        RegPanel.add(RegEmailLabel);
        RegEmailLabel.setBounds(120, 340, 86, 16);

        RegEmailField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegEmailFieldFocusLost(evt);
            }
        });
        RegPanel.add(RegEmailField);
        RegEmailField.setBounds(250, 340, 271, 29);

        RegPassLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegPassLabel.setForeground(new java.awt.Color(255, 255, 0));
        RegPassLabel.setText("Password");
        RegPanel.add(RegPassLabel);
        RegPassLabel.setBounds(120, 380, 90, 31);

        RegPassField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegPassFieldFocusLost(evt);
            }
        });
        RegPanel.add(RegPassField);
        RegPassField.setBounds(250, 380, 271, 31);

        RegPassLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegPassLabel2.setForeground(new java.awt.Color(255, 255, 0));
        RegPassLabel2.setText("Confirm Pass");
        RegPanel.add(RegPassLabel2);
        RegPassLabel2.setBounds(120, 420, 120, 31);

        RegPassField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                RegPassField2FocusLost(evt);
            }
        });
        RegPanel.add(RegPassField2);
        RegPassField2.setBounds(250, 420, 271, 31);

        RegCancel.setText("Cancel");
        RegCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegCancelActionPerformed(evt);
            }
        });
        RegPanel.add(RegCancel);
        RegCancel.setBounds(219, 474, 148, 54);

        RegConfirm.setText("Register");
        RegConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegConfirmActionPerformed(evt);
            }
        });
        RegPanel.add(RegConfirm);
        RegConfirm.setBounds(379, 474, 170, 54);

        RegFNameValid.setForeground(new java.awt.Color(255, 0, 0));
        RegPanel.add(RegFNameValid);
        RegFNameValid.setBounds(530, 220, 250, 30);

        RegLNameValid.setForeground(new java.awt.Color(255, 0, 0));
        RegPanel.add(RegLNameValid);
        RegLNameValid.setBounds(530, 260, 250, 30);

        RegUserValid.setForeground(new java.awt.Color(255, 0, 0));
        RegPanel.add(RegUserValid);
        RegUserValid.setBounds(530, 300, 250, 30);

        RegEmailValid.setForeground(new java.awt.Color(255, 0, 0));
        RegPanel.add(RegEmailValid);
        RegEmailValid.setBounds(530, 340, 250, 30);

        RegPassValid.setForeground(new java.awt.Color(255, 0, 0));
        RegPanel.add(RegPassValid);
        RegPassValid.setBounds(530, 380, 250, 31);

        RegPassMatch.setForeground(new java.awt.Color(255, 0, 0));
        RegPanel.add(RegPassMatch);
        RegPassMatch.setBounds(530, 420, 250, 32);

        RegTitlelabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        RegTitlelabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/title/title_sm.png"))); // NOI18N
        RegPanel.add(RegTitlelabel);
        RegTitlelabel.setBounds(10, 40, 776, 130);

        RegBGLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/backgrounds/Space.gif"))); // NOI18N
        RegPanel.add(RegBGLabel);
        RegBGLabel.setBounds(0, 0, 800, 570);

        MainPanel.add(RegPanel, "RegPanel");

        getContentPane().add(MainPanel, java.awt.BorderLayout.CENTER);

        NavPanel.setBackground(new java.awt.Color(0, 0, 0));
        NavPanel.setMaximumSize(new java.awt.Dimension(800, 25));
        NavPanel.setMinimumSize(new java.awt.Dimension(800, 25));
        NavPanel.setPreferredSize(new java.awt.Dimension(800, 25));

        NavHome.setText("Home");
        NavHome.setEnabled(false);
        NavHome.setMaximumSize(new java.awt.Dimension(175, 25));
        NavHome.setMinimumSize(new java.awt.Dimension(175, 25));
        NavHome.setPreferredSize(new java.awt.Dimension(175, 25));
        NavHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NavHomeActionPerformed(evt);
            }
        });

        NavRegLog.setText("Register");
        NavRegLog.setMaximumSize(new java.awt.Dimension(175, 25));
        NavRegLog.setMinimumSize(new java.awt.Dimension(175, 25));
        NavRegLog.setPreferredSize(new java.awt.Dimension(175, 25));
        NavRegLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NavRegLogActionPerformed(evt);
            }
        });

        NavHiScores.setText("Hi Scores");
        NavHiScores.setMaximumSize(new java.awt.Dimension(175, 25));
        NavHiScores.setMinimumSize(new java.awt.Dimension(175, 25));
        NavHiScores.setPreferredSize(new java.awt.Dimension(175, 25));
        NavHiScores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NavHiScoresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NavPanelLayout = new javax.swing.GroupLayout(NavPanel);
        NavPanel.setLayout(NavPanelLayout);
        NavPanelLayout.setHorizontalGroup(
            NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavPanelLayout.createSequentialGroup()
                .addComponent(NavHome, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NavHiScores, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 271, Short.MAX_VALUE)
                .addComponent(NavRegLog, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        NavPanelLayout.setVerticalGroup(
            NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavPanelLayout.createSequentialGroup()
                .addGroup(NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NavRegLog, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(NavPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NavHome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NavHiScores, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(NavPanel, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NavHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NavHomeActionPerformed

        if (User.isLoggedIn()) {
            clearFields(HomePanel);
            cl.show(MainPanel, "HomePanel");
            NavRegLog.setEnabled(true);
            NavHome.setEnabled(false);
            NavHiScores.setEnabled(true);
            HashMap stats = DBConnect.getPlayerStats(User.getUserID());
            HomeStatsValues.setText("<html>"+stats.get("games")+"<br/>"
                    +stats.get("games")+"<br/>"
                    +stats.get("score")+"<br/>"
                    +stats.get("power_ups")+"<br/>"
                    +stats.get("deaths")+"<br/>"
                    +stats.get("max_score")+"<br/>"
                    +stats.get("max_kills")+"<br/>"
                    +stats.get("max_power_ups")+"<br/>"
                    +stats.get("min_deaths")+"<br/>"
                    +stats.get("avg_score")+"<br/>"
                    +stats.get("avg_kills")+"<br/>"
                    +stats.get("avg_power_ups")+"<br/>"
                    +stats.get("avg_deaths")+"</html>");

        } else {
            cl.show(MainPanel, "LoginPanel");
            clearFields(LoginPanel);
            NavRegLog.setEnabled(true);
            NavHome.setEnabled(false);
            NavHiScores.setEnabled(true);

        }
    }//GEN-LAST:event_NavHomeActionPerformed

    private void NavHiScoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NavHiScoresActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NavHiScoresActionPerformed

    private void NavRegLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NavRegLogActionPerformed

        if (User.isLoggedIn()) {
            User.logout();
            clearFields(LoginPanel);
            cl.show(MainPanel, "LoginPanel");
            NavRegLog.setEnabled(true);
            NavRegLog.setText("Register");
            NavHome.setEnabled(false);
            NavHiScores.setEnabled(true);

        } else {
            clearFields(RegPanel);
            NavRegLog.setEnabled(false);
            NavHome.setEnabled(true);
            NavHiScores.setEnabled(true);
            cl.show(MainPanel, "RegPanel");

        }
    }//GEN-LAST:event_NavRegLogActionPerformed

    private void RegCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegCancelActionPerformed
        clearFields(LoginPanel);
        cl.show(MainPanel, "LoginPanel");
        NavHome.setEnabled(false);
        NavRegLog.setEnabled(true);

    }//GEN-LAST:event_RegCancelActionPerformed

    private void RegFNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegFNameFieldFocusLost
        if (RegFNameField.getText().length() > 0) {
            if (matchName(RegFNameField.getText())) {
                RegFNameField.setBackground(valid);
                RegFNameValid.setText("");
            } else {
                RegFNameField.setBackground(invalid);
                RegFNameValid.setText("<html>Valid Name must be 1-20 Alphabetic characters</html>");
            }
        } else {
            RegFNameField.setBackground(invalid);
            RegFNameValid.setText("<html>First Name Required</html>");
        }
    }//GEN-LAST:event_RegFNameFieldFocusLost

    private void RegLNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegLNameFieldActionPerformed

    }//GEN-LAST:event_RegLNameFieldActionPerformed

    private void RegUserFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegUserFieldFocusLost
        if (RegUserField.getText().length() > 0) {
            if (matchUser(RegUserField.getText())) {
                RegUserField.setBackground(valid);
                RegUserValid.setText("");
            } else {
                RegUserField.setBackground(invalid);
                RegUserValid.setText("<html>Handle must be 3-20 characters long </br> AlphaNumeric or @ # $ %</html>");
            }
        } else {
            RegUserField.setBackground(invalid);
            RegUserValid.setText("<html>Handle Required</html>");
        }
    }//GEN-LAST:event_RegUserFieldFocusLost

    private void RegEmailFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegEmailFieldFocusLost
        if (RegEmailField.getText().length() > 0) {
            if (matchEmail(RegEmailField.getText())) {
                RegEmailField.setBackground(valid);
                RegEmailValid.setText("");
            } else {
                RegEmailField.setBackground(invalid);
                RegEmailValid.setText("<html>Invalid email (name@site.domain)</html>");
            }
            if (DBConnect.checkEmail(RegEmailField.getText().trim()) > 0) {
                RegEmailField.setBackground(invalid);
                RegEmailValid.setText("<html>Email already registered</html>");
            }
        } else {
            RegEmailField.setBackground(invalid);
            RegEmailValid.setText("<html>Email Required</html>");
        }
    }//GEN-LAST:event_RegEmailFieldFocusLost

    private void RegPassFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegPassFieldFocusLost
        if (RegPassField.getText().length() > 0) {
            if (matchPassword(RegPassField.getText())) {
                RegPassField.setBackground(valid);
                RegPassValid.setText("");
            } else {
                RegPassField.setBackground(invalid);
                RegPassValid.setText("<html>Password must be 6-20 characters long </br> AlphaNumeric or @ # $ %</html>");
            }
        } else {
            RegPassField.setBackground(invalid);
            RegPassValid.setText("<html>Password Required</html>");
        }
    }//GEN-LAST:event_RegPassFieldFocusLost

    private void RegPassField2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegPassField2FocusLost
        if (RegPassField.getText().length() > 0 && RegPassField2.getText().length() > 0) {
            if (matchPassword(RegPassField.getText())) {
                if (RegPassField.getText().equals(RegPassField2.getText())) {
                    RegPassField.setBackground(valid);
                    RegPassField2.setBackground(valid);
                    RegPassMatch.setText("");
                } else {
                    RegPassField2.setBackground(invalid);
                    RegPassMatch.setText("Passwords must match");
                }
            } else {
                if (RegPassField.getText().equals(RegPassField2.getText())) {
                    RegPassField2.setBackground(valid);
                    RegPassMatch.setText("");
                } else {
                    RegPassField2.setBackground(invalid);
                    RegPassMatch.setText("Passwords must match");
                }
            }
        }
    }//GEN-LAST:event_RegPassField2FocusLost

    private void RegLNameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_RegLNameFieldFocusLost
        if (RegLNameField.getText().length() > 0) {
            if (matchName(RegLNameField.getText())) {
                RegLNameField.setBackground(valid);
                RegLNameValid.setText("");
            } else {
                RegLNameField.setBackground(invalid);
                RegLNameValid.setText("<html>Valid Name must be 1-20 Alphabetic characters</html>");
            }
        } else {
            RegLNameField.setBackground(invalid);
            RegLNameValid.setText("<html>Last Name Required</html>");
        }
    }//GEN-LAST:event_RegLNameFieldFocusLost

    private void RegConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegConfirmActionPerformed
        register();
    }//GEN-LAST:event_RegConfirmActionPerformed

    private void LoginConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginConfirmActionPerformed
        login();
    }//GEN-LAST:event_LoginConfirmActionPerformed

    private void LoginCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginCancelActionPerformed
        close();
    }//GEN-LAST:event_LoginCancelActionPerformed

    private void HomeExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeExitButtonActionPerformed
        close();
    }//GEN-LAST:event_HomeExitButtonActionPerformed

    private void login() {
        int errors = 0;

        //email check
        if (LoginEmailField.getText().length() > 0) {
            LoginEmailValid.setText("");
        } else {
            errors++;
            LoginEmailValid.setText("<html>Email Required</html>");
        }

        if (LoginPassField.getText().length() > 0) {
            LoginPassValid.setText("");
        } else {
            errors++;
            LoginPassValid.setText("Password Required");
        }
        if (errors == 0) {
            boolean valid = DBConnect.login(LoginEmailField.getText(), LoginPassField.getText());
            if (valid) {
                HomeWelcomeLabel.setText("Welcome " + User.getUserName() + "!");
                cl.show(MainPanel, "HomePanel");
                clearFields(LoginPanel);
                NavRegLog.setText("Logout");
                NavRegLog.setEnabled(true);
                NavHome.setEnabled(false);
                NavHiScores.setEnabled(true);
                HashMap stats = DBConnect.getPlayerStats(User.getUserID());
            HomeStatsValues.setText("<html>"+stats.get("games")+"<br/>"
                    +stats.get("score")+"<br/>"
                    +stats.get("kills")+"<br/>"
                    +stats.get("power_ups")+"<br/>"
                    +stats.get("deaths")+"<br/>"
                    +stats.get("max_score")+"<br/>"
                    +stats.get("max_kills")+"<br/>"
                    +stats.get("max_power_ups")+"<br/>"
                    +stats.get("min_deaths")+"<br/>"
                    +stats.get("avg_score")+"<br/>"
                    +stats.get("avg_kills")+"<br/>"
                    +stats.get("avg_power_ups")+"<br/>"
                    +stats.get("avg_deaths")+"</html>");
            } else {
                JOptionPane.showMessageDialog(MainPanel, "<html><h1>Error</h1><p>Email and/or password not found.</p></html>", "Login Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }

    //register form confirmation
    private void register() {
        int errors = 0;//error counter

        //FirstName validator
        if (RegFNameField.getText().length() > 0) {
            if (matchName(RegFNameField.getText())) {
                RegFNameField.setBackground(valid);
                RegFNameValid.setText("");
            } else {
                errors++;
                RegFNameField.setBackground(invalid);
                RegFNameValid.setText("<html>Valid Name must be 1-20 Alphabetic characters</html>");
            }
        } else {
            errors++;
            RegFNameField.setBackground(invalid);
            RegFNameValid.setText("<html>First Name Required</html>");
        }

        //LastName Validator
        if (RegLNameField.getText().length() > 0) {
            if (matchName(RegLNameField.getText())) {
                RegLNameField.setBackground(valid);
                RegLNameValid.setText("");
            } else {
                errors++;
                RegLNameField.setBackground(invalid);
                RegLNameValid.setText("<html>Valid Name must be 1-20 Alphabetic characters</html>");
            }
        } else {
            errors++;
            RegLNameField.setBackground(invalid);
            RegLNameValid.setText("<html>Last Name Required</html>");
        }

        //handle validator
        if (RegUserField.getText().length() > 0) {
            if (matchName(RegLNameField.getText())) {
                RegUserField.setBackground(valid);
                RegUserValid.setText("");
            } else {
                errors++;
                RegUserField.setBackground(invalid);
                RegUserValid.setText("<html>Handle must be 3-20 characters long </br> AlphaNumeric or @ # $ %</html>");
            }
        } else {
            errors++;
            RegUserField.setBackground(invalid);
            RegUserValid.setText("<html>Handle Required</html>");
        }

        //email validator
        if (RegEmailField.getText().length() > 0) {
            if (matchEmail(RegEmailField.getText())) {
                RegEmailField.setBackground(valid);
                RegEmailValid.setText("");
            } else {
                errors++;
                RegEmailField.setBackground(invalid);
                RegEmailValid.setText("<html>Invalid email (name@site.domain)</html>");
            }
            if (DBConnect.checkEmail(RegEmailField.getText().trim()) > 0) {
                errors++;
                RegEmailField.setBackground(invalid);
                RegEmailValid.setText("<html>Email already registered</html>");
            }
        } else {
            errors++;
            RegEmailField.setBackground(invalid);
            RegEmailValid.setText("<html>Email Required</html>");
        }

        //pass field 1
        if (RegPassField.getText().length() > 0) {
            if (matchPassword(RegPassField.getText())) {
                RegPassField.setBackground(valid);
                RegPassValid.setText("");
            } else {
                RegPassField.setBackground(invalid);
                RegPassValid.setText("<html>Password must be 6-20 characters long </br> AlphaNumeric or @ # $ %</html>");
            }
        } else {
            RegPassField.setBackground(invalid);
            RegPassValid.setText("<html>Password Required</html>");
        }

        //pass field 2 confirmation
        if (RegPassField.getText().length() > 0 && RegPassField2.getText().length() > 0) {
            if (matchPassword(RegPassField.getText())) {
                if (RegPassField.getText().equals(RegPassField2.getText())) {
                    RegPassField.setBackground(valid);
                    RegPassField2.setBackground(valid);
                    RegPassMatch.setText("");
                } else {
                    RegPassField2.setBackground(invalid);
                    RegPassMatch.setText("Passwords must match");
                }
            } else {
                if (RegPassField.getText().equals(RegPassField2.getText())) {
                    RegPassField2.setBackground(valid);
                    RegPassMatch.setText("");
                } else {
                    RegPassField2.setBackground(invalid);
                    RegPassMatch.setText("Passwords must match");
                }
            }
        }

        //continue registration if no errors
        if (errors == 0) {
            int register = DBConnect.register(
                    RegFNameField.getText(),
                    RegLNameField.getText(),
                    RegUserField.getText(),
                    RegEmailField.getText(),
                    RegPassField.getText());
            if (register == 1) {
                JOptionPane.showMessageDialog(MainPanel, "<html><h1>Thank You!</h1><p> You are now registered.</p></html>", "Registration Success", JOptionPane.INFORMATION_MESSAGE);
                clearFields(LoginPanel);
                LoginEmailField.setText(RegEmailField.getText());
                clearFields(RegPanel);
                cl.show(MainPanel, "LoginPanel");
            } else {
                JOptionPane.showMessageDialog(MainPanel, "<html><h1>Error</h1><p>You could not be registered due to a system error.</br> We apologize for any inconvenience.</p></html>", "Regisration Error", JOptionPane.ERROR_MESSAGE);
            }

        }

    }

    //clear text and password fields
    private void clearFields(JPanel panel) {
        Component components[] = panel.getComponents();
        for (Component comp : components) {
            if (comp instanceof JTextField) {//clear text fields
                JTextField field = (JTextField) comp;
                field.setText("");
                field.setBackground(Color.white);
            } else if (comp instanceof JPasswordField) {//clear password fields
                JPasswordField pfield = (JPasswordField) comp;
                pfield.setText("");
                pfield.setBackground(Color.white);
            } else if (comp instanceof JLabel) {//clear error labels (with fdark red foreground color)
                JLabel lfield = (JLabel) comp;
                if (lfield.getForeground().equals(new Color(255, 0, 0))) {
                    lfield.setText("");
                }
            }

        }
    }


//    public static void main(String args[]) {
//
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new UserControlPanel().setVisible(true);
//            }
//        });
//    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel HomeBGLabel;
    private javax.swing.JButton HomeExitButton;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JLabel HomeStatsLabels;
    private javax.swing.JLabel HomeStatsValues;
    private javax.swing.JLabel HomeWelcomeLabel;
    private javax.swing.JLabel LoginBGLabel;
    private javax.swing.JButton LoginCancel;
    private javax.swing.JButton LoginConfirm;
    private javax.swing.JTextField LoginEmailField;
    private javax.swing.JLabel LoginEmailLabel;
    private javax.swing.JLabel LoginEmailValid;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JPasswordField LoginPassField;
    private javax.swing.JLabel LoginPassLabel;
    private javax.swing.JLabel LoginPassValid;
    private javax.swing.JLabel LoginTitlelabel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JButton NavHiScores;
    private javax.swing.JButton NavHome;
    private javax.swing.JPanel NavPanel;
    private javax.swing.JButton NavRegLog;
    private javax.swing.JLabel RegBGLabel;
    private javax.swing.JButton RegCancel;
    private javax.swing.JButton RegConfirm;
    private javax.swing.JTextField RegEmailField;
    private javax.swing.JLabel RegEmailLabel;
    private javax.swing.JLabel RegEmailValid;
    private javax.swing.JTextField RegFNameField;
    private javax.swing.JLabel RegFNameValid;
    private javax.swing.JLabel RegFnameLabel;
    private javax.swing.JTextField RegLNameField;
    private javax.swing.JLabel RegLNameLabel;
    private javax.swing.JLabel RegLNameValid;
    private javax.swing.JPanel RegPanel;
    private javax.swing.JPasswordField RegPassField;
    private javax.swing.JPasswordField RegPassField2;
    private javax.swing.JLabel RegPassLabel;
    private javax.swing.JLabel RegPassLabel2;
    private javax.swing.JLabel RegPassMatch;
    private javax.swing.JLabel RegPassValid;
    private javax.swing.JLabel RegTitleLabel;
    private javax.swing.JLabel RegTitlelabel;
    private javax.swing.JTextField RegUserField;
    private javax.swing.JLabel RegUserLabel;
    private javax.swing.JLabel RegUserValid;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables



}
